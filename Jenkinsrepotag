pipeline {
    agent any
    environment {
           GIT_BRANCH       = 'main'
           BITBUCKET_CRED   = 'BB_Jenkins'
           GIT_REPO_URL     = 'git@bitbucket.org:cloudzenix/af_jenkins_pipeline.git'
           WORKSPACE        =  pwd()
           DOCKERHUB_CRED   = credentials('Docker-hub-tocken')
           IMAGE_NAME       = 'cloudzenix/nginx'
           
    }
    options { 
            buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
            skipDefaultCheckout()
            disableConcurrentBuilds()
    } 
    stages {
        stage('Cleanup Workspace'){
            steps {
               println "${env.BRANCH_NAME}"
               cleanWs()
               //clean up temp directory
               dir("${env.WORKSPACE}@tmp") {
                     deleteDir()
               }
               //clean up script directory
               dir("${env.WORKSPACE}@script") {
                     deleteDir()
               }
               dir("${env.WORKSPACE}@script@tmp") {
                     deleteDir()
               }
               step([$class: 'WsCleanup']) 
               }
               }
         stage('checkoutthecode'){
            steps {
               git credentialsId: 'BB_Jenkins', url: 'https://naveen_raghunandan@bitbucket.org/cloudzenix/af_jenkins_pipeline.git'
               }
               }
               
       
        stage('pushing a tag to repo'){
          steps {
            script {
                    def version = readFile('VERSION')
                    def versions = version.split('\\.')
                    def major = versions[0]
                    def minor = versions[0] + '.' + versions[1]
                    def patch = version.trim()
               withCredentials([gitUsernamePassword(credentialsId: 'BB_Jenkins', gitToolName: 'Default')]) { 
                echo "TAG is : {version}"
                 sh """
                 echo "TAG is : ${version}"
                 git tag -a ${version} -m "tag: ${version} is created"
                 echo "*** Created tag {version} in ${GIT_BRANCH}" 
                 git push origin --tags
                 
                """
                }
              }
           }
        }
    }
}
